{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/Box.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = {\n  fov: 35,\n  position: [0, 0, 10]\n};\nconst Sphere = ({\n  position\n}) => {\n  _s();\n  const myMesh = React.useRef();\n  useFrame(({\n    clock\n  }) => {\n    myMesh.current.rotation.x = clock.getElapsedTime();\n    //.position.y\n    //Math.sin(clock.getElapsedTime())\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: myMesh,\n      position: position,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [.5, .5, .5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Sphere, \"J8oXLwCShAw+ZQNXovCVAXV6iXA=\", false, function () {\n  return [useFrame];\n});\n_c = Sphere;\nconst Spheres = () => {\n  _s2();\n  const numBoxes = 10000;\n  const boxesPerRow = 100;\n  const boxPositions = useMemo(() => {\n    return Array.from({\n      length: numBoxes\n    }, (_, i) => [i % boxesPerRow * 1.5 - boxesPerRow / 2,\n    // x position\n    0,\n    // y position (fixed for XZ plane)\n    Math.floor(i / boxesPerRow) * 1.5 - numBoxes / boxesPerRow / 2 // z position\n    ]);\n  }, [numBoxes, boxesPerRow]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: boxPositions.map((position, index) => {\n      const rowIndex = Math.floor(index / boxesPerRow);\n      return /*#__PURE__*/_jsxDEV(Box, {\n        position: position\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false);\n};\n_s2(Spheres, \"e+xTlAVpbl52/W56+Xdi5sOl4LI=\");\n_c2 = Spheres;\nexport default Boxes;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sphere\");\n$RefreshReg$(_c2, \"Spheres\");","map":{"version":3,"names":["React","useRef","useState","useMemo","Canvas","useFrame","jsxDEV","_jsxDEV","Fragment","_Fragment","config","fov","position","Sphere","_s","myMesh","clock","current","rotation","x","getElapsedTime","children","ref","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Spheres","_s2","numBoxes","boxesPerRow","boxPositions","Array","from","length","_","i","Math","floor","map","index","rowIndex","Box","_c2","Boxes","$RefreshReg$"],"sources":["/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/Box.js"],"sourcesContent":["import React, { useRef, useState, useMemo } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nconst config = { fov: 35, position: [0, 0, 10] }\n\n\nconst Sphere = ({position}) => {\n    const myMesh = React.useRef()\n    useFrame(({clock}) => {\n      myMesh.current.rotation.x = clock.getElapsedTime();\n      //.position.y\n      //Math.sin(clock.getElapsedTime())\n    })\n\n    return (\n      <>\n        <mesh ref={myMesh} position={position}>\n          <sphereGeometry args={[.5, .5, .5]} />\n          <meshPhongMaterial />\n        </mesh>\n      </>\n    )\n  \n  }\n  const Spheres = () => {\n    const numBoxes = 10000;\n    const boxesPerRow = 100;\n    const boxPositions = useMemo(() => {\n      return Array.from({ length: numBoxes }, (_, i) => [\n        (i % boxesPerRow) * 1.5 - (boxesPerRow / 2), // x position\n        0, // y position (fixed for XZ plane)\n        Math.floor(i / boxesPerRow) * 1.5 - (numBoxes / boxesPerRow / 2), // z position\n      ]);\n    }, [numBoxes, boxesPerRow]);\n  \n    return (\n      <>\n        {boxPositions.map((position, index) => {\n          const rowIndex = Math.floor(index / boxesPerRow);\n          return <Box key={index} position={position}/>;\n        })}\n      </>\n    );\n     \n\n\n  }\n  export default Boxes;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACxD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,MAAM,GAAG;EAAEC,GAAG,EAAE,EAAE;EAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAAE,CAAC;AAGhD,MAAMC,MAAM,GAAGA,CAAC;EAACD;AAAQ,CAAC,KAAK;EAAAE,EAAA;EAC3B,MAAMC,MAAM,GAAGf,KAAK,CAACC,MAAM,CAAC,CAAC;EAC7BI,QAAQ,CAAC,CAAC;IAACW;EAAK,CAAC,KAAK;IACpBD,MAAM,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGH,KAAK,CAACI,cAAc,CAAC,CAAC;IAClD;IACA;EACF,CAAC,CAAC;EAEF,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAMe,GAAG,EAAEP,MAAO;MAACH,QAAQ,EAAEA,QAAS;MAAAS,QAAA,gBACpCd,OAAA;QAAgBgB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCpB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC,gBACP,CAAC;AAGP,CAAC;AAAAb,EAAA,CAjBGD,MAAM;EAAA,QAERR,QAAQ;AAAA;AAAAuB,EAAA,GAFNf,MAAM;AAkBV,MAAMgB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAMC,QAAQ,GAAG,KAAK;EACtB,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAMC,YAAY,GAAG9B,OAAO,CAAC,MAAM;IACjC,OAAO+B,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEL;IAAS,CAAC,EAAE,CAACM,CAAC,EAAEC,CAAC,KAAK,CAC/CA,CAAC,GAAGN,WAAW,GAAI,GAAG,GAAIA,WAAW,GAAG,CAAE;IAAE;IAC7C,CAAC;IAAE;IACHO,IAAI,CAACC,KAAK,CAACF,CAAC,GAAGN,WAAW,CAAC,GAAG,GAAG,GAAID,QAAQ,GAAGC,WAAW,GAAG,CAAE,CAAE;IAAA,CACnE,CAAC;EACJ,CAAC,EAAE,CAACD,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAE3B,oBACEzB,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACGY,YAAY,CAACQ,GAAG,CAAC,CAAC7B,QAAQ,EAAE8B,KAAK,KAAK;MACrC,MAAMC,QAAQ,GAAGJ,IAAI,CAACC,KAAK,CAACE,KAAK,GAAGV,WAAW,CAAC;MAChD,oBAAOzB,OAAA,CAACqC,GAAG;QAAahC,QAAQ,EAAEA;MAAS,GAA1B8B,KAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC;IAC/C,CAAC;EAAC,gBACF,CAAC;AAKP,CAAC;AAAAG,GAAA,CAtBKD,OAAO;AAAAgB,GAAA,GAAPhB,OAAO;AAuBb,eAAeiB,KAAK;AAAC,IAAAlB,EAAA,EAAAiB,GAAA;AAAAE,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}