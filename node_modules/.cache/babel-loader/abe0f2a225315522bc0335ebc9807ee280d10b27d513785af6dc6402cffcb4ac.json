{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/Box.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Box = ({\n  position,\n  timeDifference\n}) => {\n  _s();\n  const myMesh = React.useRef();\n  useFrame(({\n    clock\n  }) => {\n    myMesh.current.rotation.x = clock.getElapsedTime() + timeDifference;\n    //.position.y\n    //Math.sin(clock.getElapsedTime())\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: myMesh,\n      position: position,\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [.5, .5, .5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Box, \"J8oXLwCShAw+ZQNXovCVAXV6iXA=\", false, function () {\n  return [useFrame];\n});\n_c = Box;\nconst Boxes = () => {\n  _s2();\n  const numBoxes = 25;\n  const boxesPerRow = 5;\n  const boxPositions = useMemo(() => {\n    return Array.from({\n      length: numBoxes\n    }, (_, i) => [i % boxesPerRow * 1.5 - boxesPerRow / 2, Math.floor(i / boxesPerRow) * 1.5 - numBoxes / boxesPerRow / 2, 0]);\n  }, [numBoxes, boxesPerRow]);\n  diff = diff + 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: boxPositions.map((position, index) => {\n      const rowIndex = Math.floor(index / boxesPerRow);\n      return /*#__PURE__*/_jsxDEV(Box, {\n        position: position,\n        timeDifference: dif\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false);\n};\n_s2(Boxes, \"e+xTlAVpbl52/W56+Xdi5sOl4LI=\");\n_c2 = Boxes;\nexport default Boxes;\nvar _c, _c2;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Boxes\");","map":{"version":3,"names":["React","useRef","useState","useMemo","Canvas","useFrame","jsxDEV","_jsxDEV","Fragment","_Fragment","Box","position","timeDifference","_s","myMesh","clock","current","rotation","x","getElapsedTime","children","ref","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Boxes","_s2","numBoxes","boxesPerRow","boxPositions","Array","from","length","_","i","Math","floor","diff","map","index","rowIndex","dif","_c2","$RefreshReg$"],"sources":["/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/Box.js"],"sourcesContent":["import React, { useRef, useState, useMemo } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nconst Box = ({position, timeDifference}) => {\n    const myMesh = React.useRef()\n    useFrame(({clock}) => {\n      myMesh.current.rotation.x = clock.getElapsedTime() + timeDifference;\n      //.position.y\n      //Math.sin(clock.getElapsedTime())\n    })\n\n    return (\n      <>\n        <mesh ref={myMesh} position={position}>\n          <boxGeometry args={[.5, .5, .5]} />\n          <meshPhongMaterial />\n        </mesh>\n      </>\n    )\n  \n  }\n  const Boxes = () => {\n    const numBoxes = 25;\n    const boxesPerRow = 5;\n    const boxPositions = useMemo(() => {\n      return Array.from({ length: numBoxes }, (_, i) => [\n        (i % boxesPerRow) * 1.5 - (boxesPerRow / 2),\n        Math.floor(i / boxesPerRow) * 1.5 - (numBoxes / boxesPerRow / 2),\n        0,\n      ]);\n    }, [numBoxes, boxesPerRow])\n    \n    diff = diff + 1;\n    return (\n      <>\n        {boxPositions.map((position, index) => {\n          const rowIndex = Math.floor(index / boxesPerRow);\n          return <Box key={index} position={position} timeDifference={dif} />;\n        })}\n      </>\n    );\n     \n\n\n  }\n  export default Boxes;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACxD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,GAAG,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,MAAM,GAAGd,KAAK,CAACC,MAAM,CAAC,CAAC;EAC7BI,QAAQ,CAAC,CAAC;IAACU;EAAK,CAAC,KAAK;IACpBD,MAAM,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGH,KAAK,CAACI,cAAc,CAAC,CAAC,GAAGP,cAAc;IACnE;IACA;EACF,CAAC,CAAC;EAEF,oBACEL,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA;MAAMc,GAAG,EAAEP,MAAO;MAACH,QAAQ,EAAEA,QAAS;MAAAS,QAAA,gBACpCb,OAAA;QAAae,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC,gBACP,CAAC;AAGP,CAAC;AAAAb,EAAA,CAjBGH,GAAG;EAAA,QAELL,QAAQ;AAAA;AAAAsB,EAAA,GAFNjB,GAAG;AAkBP,MAAMkB,KAAK,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,WAAW,GAAG,CAAC;EACrB,MAAMC,YAAY,GAAG7B,OAAO,CAAC,MAAM;IACjC,OAAO8B,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEL;IAAS,CAAC,EAAE,CAACM,CAAC,EAAEC,CAAC,KAAK,CAC/CA,CAAC,GAAGN,WAAW,GAAI,GAAG,GAAIA,WAAW,GAAG,CAAE,EAC3CO,IAAI,CAACC,KAAK,CAACF,CAAC,GAAGN,WAAW,CAAC,GAAG,GAAG,GAAID,QAAQ,GAAGC,WAAW,GAAG,CAAE,EAChE,CAAC,CACF,CAAC;EACJ,CAAC,EAAE,CAACD,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAE3BS,IAAI,GAAGA,IAAI,GAAG,CAAC;EACf,oBACEjC,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACGY,YAAY,CAACS,GAAG,CAAC,CAAC9B,QAAQ,EAAE+B,KAAK,KAAK;MACrC,MAAMC,QAAQ,GAAGL,IAAI,CAACC,KAAK,CAACG,KAAK,GAAGX,WAAW,CAAC;MAChD,oBAAOxB,OAAA,CAACG,GAAG;QAAaC,QAAQ,EAAEA,QAAS;QAACC,cAAc,EAAEgC;MAAI,GAA/CF,KAAK;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAAC;IACrE,CAAC;EAAC,gBACF,CAAC;AAKP,CAAC;AAAAG,GAAA,CAvBKD,KAAK;AAAAiB,GAAA,GAALjB,KAAK;AAwBX,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}