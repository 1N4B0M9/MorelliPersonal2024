{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/Box.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spheres = () => {\n  _s();\n  const numSpheres = 10000;\n  const spheresPerRow = 100;\n  const meshRef = useRef();\n\n  // Memoize positions for instanced mesh\n  const positions = useMemo(() => {\n    const posArray = [];\n    for (let i = 0; i < numSpheres; i++) {\n      const x = i % spheresPerRow * 1.5 - spheresPerRow / 2;\n      const y = 0;\n      const z = Math.floor(i / spheresPerRow) * 1.5 - numSpheres / spheresPerRow / 2;\n      posArray.push([x, y, z]);\n    }\n    return posArray;\n  }, [numSpheres, spheresPerRow]);\n\n  // Animation loop\n  useFrame(({\n    clock\n  }) => {\n    const time = clock.getElapsedTime();\n    for (let i = 0; i < numSpheres; i++) {\n      const id = i;\n      const dummy = new THREE.Object3D();\n      const [x, y, z] = positions[i];\n\n      // Apply transformations\n      dummy.position.set(x, Math.sin(time + x) * 0.5, z);\n      dummy.rotation.set(time, time, 0);\n      dummy.updateMatrix();\n\n      // Update instance matrix\n      meshRef.current.setMatrixAt(id, dummy.matrix);\n    }\n    meshRef.current.instanceMatrix.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"instancedMesh\", {\n    ref: meshRef,\n    args: [null, null, numSpheres],\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [0.5, 16, 16]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n      color: \"hotpink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Spheres, \"MWnRDFRyj6jDunZkFrfEqXDdPO0=\", false, function () {\n  return [useFrame];\n});\n_c = Spheres;\nexport default Spheres;\nvar _c;\n$RefreshReg$(_c, \"Spheres\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","THREE","jsxDEV","_jsxDEV","Spheres","_s","numSpheres","spheresPerRow","meshRef","positions","posArray","i","x","y","z","Math","floor","push","clock","time","getElapsedTime","id","dummy","Object3D","position","set","sin","rotation","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","ref","args","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/Box.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nconst Spheres = () => {\n  const numSpheres = 10000;\n  const spheresPerRow = 100;\n  const meshRef = useRef();\n\n  // Memoize positions for instanced mesh\n  const positions = useMemo(() => {\n    const posArray = [];\n    for (let i = 0; i < numSpheres; i++) {\n      const x = (i % spheresPerRow) * 1.5 - (spheresPerRow / 2);\n      const y = 0;\n      const z = Math.floor(i / spheresPerRow) * 1.5 - (numSpheres / spheresPerRow / 2);\n      posArray.push([x, y, z]);\n    }\n    return posArray;\n  }, [numSpheres, spheresPerRow]);\n\n  // Animation loop\n  useFrame(({ clock }) => {\n    const time = clock.getElapsedTime();\n    for (let i = 0; i < numSpheres; i++) {\n      const id = i;\n      const dummy = new THREE.Object3D();\n      const [x, y, z] = positions[i];\n\n      // Apply transformations\n      dummy.position.set(x, Math.sin(time + x) * 0.5, z);\n      dummy.rotation.set(time, time, 0);\n      dummy.updateMatrix();\n\n      // Update instance matrix\n      meshRef.current.setMatrixAt(id, dummy.matrix);\n    }\n    meshRef.current.instanceMatrix.needsUpdate = true;\n  });\n\n  return (\n    <instancedMesh ref={meshRef} args={[null, null, numSpheres]}>\n      <sphereGeometry args={[0.5, 16, 16]} />\n      <meshPhongMaterial color=\"hotpink\" />\n    </instancedMesh>\n  );\n};\n\n\n  export default Spheres;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAC9C,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACrD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,UAAU,GAAG,KAAK;EACxB,MAAMC,aAAa,GAAG,GAAG;EACzB,MAAMC,OAAO,GAAGX,MAAM,CAAC,CAAC;;EAExB;EACA,MAAMY,SAAS,GAAGX,OAAO,CAAC,MAAM;IAC9B,MAAMY,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;MACnC,MAAMC,CAAC,GAAID,CAAC,GAAGJ,aAAa,GAAI,GAAG,GAAIA,aAAa,GAAG,CAAE;MACzD,MAAMM,CAAC,GAAG,CAAC;MACX,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,CAAC,GAAGJ,aAAa,CAAC,GAAG,GAAG,GAAID,UAAU,GAAGC,aAAa,GAAG,CAAE;MAChFG,QAAQ,CAACO,IAAI,CAAC,CAACL,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC1B;IACA,OAAOJ,QAAQ;EACjB,CAAC,EAAE,CAACJ,UAAU,EAAEC,aAAa,CAAC,CAAC;;EAE/B;EACAP,QAAQ,CAAC,CAAC;IAAEkB;EAAM,CAAC,KAAK;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,cAAc,CAAC,CAAC;IACnC,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;MACnC,MAAMU,EAAE,GAAGV,CAAC;MACZ,MAAMW,KAAK,GAAG,IAAIrB,KAAK,CAACsB,QAAQ,CAAC,CAAC;MAClC,MAAM,CAACX,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGL,SAAS,CAACE,CAAC,CAAC;;MAE9B;MACAW,KAAK,CAACE,QAAQ,CAACC,GAAG,CAACb,CAAC,EAAEG,IAAI,CAACW,GAAG,CAACP,IAAI,GAAGP,CAAC,CAAC,GAAG,GAAG,EAAEE,CAAC,CAAC;MAClDQ,KAAK,CAACK,QAAQ,CAACF,GAAG,CAACN,IAAI,EAAEA,IAAI,EAAE,CAAC,CAAC;MACjCG,KAAK,CAACM,YAAY,CAAC,CAAC;;MAEpB;MACApB,OAAO,CAACqB,OAAO,CAACC,WAAW,CAACT,EAAE,EAAEC,KAAK,CAACS,MAAM,CAAC;IAC/C;IACAvB,OAAO,CAACqB,OAAO,CAACG,cAAc,CAACC,WAAW,GAAG,IAAI;EACnD,CAAC,CAAC;EAEF,oBACE9B,OAAA;IAAe+B,GAAG,EAAE1B,OAAQ;IAAC2B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE7B,UAAU,CAAE;IAAA8B,QAAA,gBAC1DjC,OAAA;MAAgBgC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCrC,OAAA;MAAmBsC,KAAK,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEpB,CAAC;AAACnC,EAAA,CA1CID,OAAO;EAAA,QAkBXJ,QAAQ;AAAA;AAAA0C,EAAA,GAlBJtC,OAAO;AA6CX,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}