{"ast":null,"code":"import{createRoot}from'react-dom/client';import React,{useRef,useState}from'react';import{Canvas,useFrame}from'@react-three/fiber';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ThreeIndex(props){// This reference will give us direct access to the mesh\nconst meshRef=useRef();// Set up state for the hovered and active state\nconst[hovered,setHover]=useState(false);const[active,setActive]=useState(false);// Subscribe this component to the render-loop, rotate the mesh every frame\nuseFrame((state,delta)=>meshRef.current.rotation.x+=delta);// Return view, these are regular three.js elements expressed in JSX\nreturn/*#__PURE__*/_jsxs(\"mesh\",{...props,ref:meshRef,scale:active?1.5:1,onClick:event=>setActive(!active),onPointerOver:event=>setHover(true),onPointerOut:event=>setHover(false),children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[1,1,1]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:hovered?'hotpink':'orange'})]});}","map":{"version":3,"names":["createRoot","React","useRef","useState","Canvas","useFrame","jsx","_jsx","jsxs","_jsxs","ThreeIndex","props","meshRef","hovered","setHover","active","setActive","state","delta","current","rotation","x","ref","scale","onClick","event","onPointerOver","onPointerOut","children","args","color"],"sources":["/Users/nathanmorelli/Desktop/MorelliPersonal2024 /src/ThreeDeeFiles/ThreeIndex.js"],"sourcesContent":["import { createRoot } from 'react-dom/client'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nexport default function ThreeIndex(props) {\n  // This reference will give us direct access to the mesh\n  const meshRef = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (meshRef.current.rotation.x += delta))\n  // Return view, these are regular three.js elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={meshRef}\n      scale={active ? 1.5 : 1}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,kBAAkB,CAC7C,MAAO,CAAAC,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,OAASC,MAAM,CAAEC,QAAQ,KAAQ,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,cAAe,SAAS,CAAAC,UAAUA,CAACC,KAAK,CAAE,CACxC;AACA,KAAM,CAAAC,OAAO,CAAGV,MAAM,CAAC,CAAC,CACxB;AACA,KAAM,CAACW,OAAO,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACY,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAC3C;AACAE,QAAQ,CAAC,CAACY,KAAK,CAAEC,KAAK,GAAMN,OAAO,CAACO,OAAO,CAACC,QAAQ,CAACC,CAAC,EAAIH,KAAM,CAAC,CACjE;AACA,mBACET,KAAA,YACME,KAAK,CACTW,GAAG,CAAEV,OAAQ,CACbW,KAAK,CAAER,MAAM,CAAG,GAAG,CAAG,CAAE,CACxBS,OAAO,CAAGC,KAAK,EAAKT,SAAS,CAAC,CAACD,MAAM,CAAE,CACvCW,aAAa,CAAGD,KAAK,EAAKX,QAAQ,CAAC,IAAI,CAAE,CACzCa,YAAY,CAAGF,KAAK,EAAKX,QAAQ,CAAC,KAAK,CAAE,CAAAc,QAAA,eACzCrB,IAAA,gBAAasB,IAAI,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,cAChCtB,IAAA,yBAAsBuB,KAAK,CAAEjB,OAAO,CAAG,SAAS,CAAG,QAAS,CAAE,CAAC,EAC3D,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}